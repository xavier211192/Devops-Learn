trigger:
  branches:
    include:
    - feature/*
    - release/*
    - develop
  paths:
    include:
    - azuredatafactory
    
pool:
  vmImage: 'ubuntu-latest'

variables:
  workingDir: $(Build.Repository.LocalPath)/azuredatafactory/src
  serviceConnection: 'AzureServiceConnection' 
  subscriptionId: '1cc5c2ce-762c-4499-9a7b-6381cd10f317'
  resourceGroupName: 'learn-sandbox'
  dataFactoryName: 'development-datafactory-5v77ew3b4viqc'
  dataFactoryResourceId: /subscriptions/$(subscriptionId)/resourceGroups/$(resourceGroupName)/providers/Microsoft.DataFactory/factories/$(dataFactoryName)

stages:
  - stage: build
    jobs:
      - job:
      
        steps:
          
          # configuring node
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
            displayName: 'Install Node.js'
          
          - task: Npm@1
            inputs:
              command: 'install'
              verbose: true
              workingDir: '$(workingDir)'
            displayName: 'Install npm package'
          
          # validating artifacts
          - task: Npm@1
            inputs:
              command: 'custom'
              customCommand: 'run build validate $(workingDir) $(dataFactoryResourceId)'
              workingDir: '$(workingDir)'
            displayName: 'Validate'

          - task: Npm@1
            inputs:
              command: 'custom'
              customCommand: 'run build export $(workingDir) $(dataFactoryResourceId) artifacts'
              workingDir: '$(workingDir)'
            displayName: 'Generate ARM Template'

        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(workingDir)/artifacts'
            Contents: '**'
            TargetFolder: '$(build.artifactstagingdirectory)/application' 
          displayName: 'Copying application artifact'

        # building bicep into ARM
        - task: AzureCLI@2  
          displayName: 'Build bicep artifact' 
          inputs: 
            azureSubscription: $(serviceConnection)
            scriptType: 'pscore'  
            scriptLocation: 'inlineScript'  
            inlineScript: |
              $file = "$(Build.SourcesDirectory)/azuredatafactory/iac/datafactory.bicep"            
              New-Item -ItemType Directory -Force -Path $(build.artifactstagingdirectory)/infrastructure
              az bicep build --file $file --outdir $(build.artifactstagingdirectory)/infrastructure
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(build.artifactstagingdirectory)'
            artifact: 'datafactory'
            publishLocation: 'pipeline'
